<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">
<!-- =============================[전체직원조회(Map)]=========================== -->
<!-- key값으로 대문자 db컬럼명이 들어옴  -> 그대로 사용하려면 jsp에서 꺼내쓸때도 대문자로 접근 -->
	<select id="selectAllEmp" resultType="map">
	select
		*
	from
		emp
	order by
		emp_id
	</select>
	<!--
	${} 테이블명, 컬럼명의 식별자를 표현
	#{} 데이터를 표현 -> 문자열이면 '문자열' 숫자형이면 숫자그대로, 날짜형이면 날짜형으로 바꿔줌
	
	만약, #{searchType} 이렇게 하면 홑따음표가 붙어서
	'emp_id' like '%20%' 이런식으로 처리됨
	-> 가져온 데이터를 식별자로 만들기 위해서는 ${} 사용
	-> emp_id like '%20%' -->
	<!-- 처리 예시
	emp_id like '%20%'
	emp_name like '%동%'
	email like '%naver%'
	phone like '%1234%' -->
	<select id="search1" resultType="map">
	select
		*
	from
		emp
	where
		${searchType} like '%' || #{searchKeyword} || '%'
	</select>
	<select id="search2" resultType="map">
	select *
	from (
		select
			e.*,
			decode(substr(emp_no, 8, 1), '1', '남', '3', '남', '여') gender
		from
			emp e
		) e
	<!-- where태그 내부에 and/or가 먼저오면 제거, 
		 where태그 몸통이 비어있다면 where키워드 자체를 제거 -->
	<where>
		<if test="gender != null and gender != ''">
			gender = #{gender}
		</if>
		<if test="searchType != null and searchType != ''">
		and
			${searchType} like '%' || #{searchKeyword} || '%'
		</if>
		<!--
			CDATA Section태그
			xml의 entity문자 (예약문자) < > & 등을 문자그대로 사용하고자 할 때 사용
			<![CDATA[문자그대로 처리]]>
		 -->
		<if test="salary != null and salary != 0">
			<if test="salaryCompare != null and salaryCompare != 0">
				<choose>
					<when test="salaryComapre == 'ge'">
						and salary <![CDATA[>=]]> #{salary}
					</when>
					<when test="salaryComapre == 'le'">
						and salary <![CDATA[<=]]> #{salary}
					</when>
				</choose>
			</if>
		</if>
		<!-- 1. hire_date 문자열로 처리-->
<!-- 		<if test="hire_date != null and hire_date != ''">
			<if test="hiredateCompare != null and hiredateCompare != ''">
				<choose>
					<when test="hiredateCompare eq 'ge'">
					 	and hire_date <![CDATA[>=]]> to_date(#{hire_date}, 'yyyy-mm-dd')
					</when>
					<when test="hiredateCompare eq 'le'">
					 	and hire_date <![CDATA[<=]]> to_date(#{hire_date}, 'yyyy-mm-dd')
					</when>
				</choose>
			</if>
		</if> -->
		<!-- 2. hireDate 날짜형으로 처리 -->
		<if test="hireDate != null">
			<if test="hiredateCompare != null and hiredateCompare != ''">
				<choose>
					<when test="hiredateCompare eq 'ge'">
					 	and hire_date <![CDATA[>=]]> #{hireDate}
					</when>
					<when test="hiredateCompare eq 'le'">
					 	and hire_date <![CDATA[<=]]> #{hireDate}
					</when>
				</choose>
			</if>
		</if>
	</where>
	</select>
	<select id="selectJobList" resultType="map">
	select
		job_code "jobCode",
		job_name "jobName"
	from
		job
	</select>
	<select id="selectDeptList" resultType="map">
	select
		dept_id "deptId",
		dept_title "deptTitle"
	from
		dept
	</select>
	<select id="search3" resultType="map">
		select
			*
		from (
			select
				e.*,
				decode(substr(emp_no, 8, 1), '1', '남', '3', '남', '여') gender,
				d.dept_title,
				j.job_name
		from
			emp e
				left join dept d
					on e.dept_code = d.dept_id
				left join job j
					on e.job_code = j.job_code
			) e
		<where>
			<if test="jobCodeArr != null">
			job_code in
				<foreach 
					collection="jobCodeArr" item="jobCode" 
					open="(" close=")" separator=",">
					#{jobCode}
				</foreach>
			</if>
		<if test="deptIdList != null">
			and nvl(dept_code, 'D0') in
				<foreach
					collection="deptIdList" item="deptId"
					open="(" close=")" separator=",">
					#{deptId}
				</foreach>
		</if>
		</where>
		
	</select>
</mapper>